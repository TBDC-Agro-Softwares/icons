import { defineComponent as i, computed as r, openBlock as a, createElementBlock as C, normalizeClass as n, normalizeStyle as c, createStaticVNode as s } from "vue";
const u = /* @__PURE__ */ i({
  __name: "TIIdentification",
  props: {
    size: {
      type: String,
      default: "is-default",
      validator(t) {
        return ["is-small", "is-medium", "is-large", "is-default", "is-12", "is-14", "is-26", "is-28", "is-36"].indexOf(t) > -1;
      }
    },
    type: {
      type: String,
      default: void 0
    },
    title: {
      type: String,
      default: void 0
    },
    color: {
      type: String,
      default: void 0
    },
    clickable: {
      type: Boolean,
      default: !1
    }
  },
  setup(t) {
    const e = t, o = r(() => [
      "icon",
      e.size,
      {
        [e.type]: e.type && !e.color,
        "is-clickable": e.clickable
      }
    ]);
    return (d, l) => (a(), C("svg", {
      class: n(o.value),
      style: c(t.color ? `color: ${t.color} !important` : void 0),
      width: "512",
      height: "512",
      viewBox: "0 0 512 512",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, l[0] || (l[0] = [
      s('<path d="M250.607 362.19C254.557 362.24 258.318 360.505 260.848 357.467C263.599 354.174 264.707 349.676 263.886 345.128C260.315 325.282 249.169 308.61 231.649 296.911C216.085 286.525 196.37 280.803 176.13 280.803C155.889 280.803 136.174 286.521 120.61 296.911C103.091 308.614 91.9442 325.286 88.3727 345.132C87.5517 349.681 88.6604 354.178 91.411 357.472C93.9418 360.508 97.7033 362.241 101.652 362.19H250.607Z" fill="currentColor"></path><path d="M176.13 172.287C188.825 172.287 200.326 177.191 208.561 186.097C216.898 195.114 220.96 207.249 220 220.263C218.091 246.167 198.443 267.238 176.13 267.238C153.816 267.238 134.134 246.163 132.255 220.254C131.307 207.122 135.345 194.961 143.63 186.013C151.827 177.162 163.367 172.287 176.13 172.287Z" fill="currentColor"></path><path d="M289.62 184.539C289.62 177.772 295.417 172.287 302.568 172.287H411.763C418.914 172.287 424.711 177.772 424.711 184.539C424.711 191.305 418.914 196.791 411.763 196.791H302.568C295.417 196.791 289.62 191.305 289.62 184.539Z" fill="currentColor"></path><path d="M302.568 254.987C295.417 254.987 289.62 260.472 289.62 267.239C289.62 274.005 295.417 279.491 302.568 279.491H411.763C418.914 279.491 424.711 274.005 424.711 267.239C424.711 260.472 418.914 254.987 411.763 254.987H302.568Z" fill="currentColor"></path><path d="M289.62 349.939C289.62 343.172 295.417 337.687 302.568 337.687H411.763C418.914 337.687 424.711 343.172 424.711 349.939C424.711 356.705 418.914 362.191 411.763 362.191H302.568C295.417 362.191 289.62 356.705 289.62 349.939Z" fill="currentColor"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M83.7919 111C55.188 111 32 134.188 32 162.792V371.686C32 400.29 55.188 423.478 83.7919 423.478H428.208C456.812 423.478 480 400.29 480 371.686V162.792C480 134.188 456.812 111 428.208 111H83.7919ZM428.208 136.896H83.7919C69.49 136.896 57.896 148.49 57.896 162.792V371.686C57.896 385.988 69.49 397.582 83.7919 397.582H428.208C442.51 397.582 454.104 385.988 454.104 371.686V162.792C454.104 148.49 442.51 136.896 428.208 136.896Z" fill="currentColor"></path>', 6)
    ]), 6));
  }
});
export {
  u as _
};
