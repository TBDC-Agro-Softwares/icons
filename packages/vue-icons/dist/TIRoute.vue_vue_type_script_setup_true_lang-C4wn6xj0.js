import { defineComponent as i, computed as r, openBlock as n, createElementBlock as s, normalizeClass as a, normalizeStyle as c, createElementVNode as l } from "vue";
const p = /* @__PURE__ */ i({
  __name: "TIRoute",
  props: {
    size: {
      type: String,
      default: "is-default",
      validator(C) {
        return ["is-small", "is-medium", "is-large", "is-default", "is-12", "is-16", "is-14", "is-26", "is-28", "is-36"].indexOf(C) > -1;
      }
    },
    type: {
      type: String,
      default: void 0
    },
    title: {
      type: String,
      default: void 0
    },
    color: {
      type: String,
      default: void 0
    },
    clickable: {
      type: Boolean,
      default: !1
    }
  },
  setup(C) {
    const e = C, o = r(() => [
      "icon",
      e.size,
      {
        [e.type]: e.type && !e.color,
        "is-clickable": e.clickable
      }
    ]);
    return (d, t) => (n(), s("svg", {
      class: a(o.value),
      style: c(C.color ? `color: ${C.color} !important` : void 0),
      width: "513",
      height: "512",
      viewBox: "0 0 513 512",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, t[0] || (t[0] = [
      l("path", {
        d: "M246.922 395.576C236.435 395.576 226.073 395.825 215.586 395.576C205.723 395.326 197.858 387.71 196.734 377.972C195.61 368.359 201.853 359.245 211.216 356.499C214.462 355.625 217.708 355.875 220.954 355.875C229.693 355.875 238.308 355.875 247.047 355.875C247.422 355.375 247.796 354.876 248.171 354.252C246.673 353.253 245.049 352.379 243.676 351.13C234.687 342.391 234.188 329.782 242.303 321.667C250.668 313.427 262.778 313.801 271.891 322.79C281.879 332.653 291.742 342.641 301.605 352.753C303.727 354.876 305.85 355.875 308.971 355.875C337.561 355.75 366.026 355.875 394.616 355.75C417.338 355.625 434.941 339.894 436.314 318.545C437.688 297.197 422.456 278.844 401.108 276.222C398.236 275.848 395.24 275.723 392.243 275.723C301.106 275.723 209.968 275.723 118.83 275.723C83.3734 275.723 54.1593 255.997 42.0492 224.162C22.5732 172.974 59.6526 117.293 114.46 116.419C156.783 115.67 198.981 116.294 241.304 116.169C243.177 116.169 245.05 116.169 247.297 116.169C246.797 113.548 244.675 112.549 243.302 111.175C234.937 102.686 234.438 90.3261 242.303 82.2111C250.293 73.9712 262.653 73.8464 271.142 82.336C284.251 95.1951 297.36 108.179 310.219 121.413C318.834 130.277 318.959 141.888 310.344 150.752C297.235 164.11 284.002 177.344 270.643 190.453C262.278 198.568 249.919 198.069 242.178 189.829C234.687 181.839 234.937 169.728 242.927 161.613C244.425 160.115 246.048 158.617 247.422 157.244C246.673 155.621 245.674 156.12 244.8 156.12C202.477 156.12 160.279 155.995 117.956 156.12C101.226 156.12 88.3672 163.611 81.0013 178.717C74.0099 193.075 75.5081 207.307 85.1212 220.166C93.6108 231.527 105.471 236.147 119.329 236.147C181.752 236.147 244.176 236.147 306.599 236.147C336.187 236.147 365.901 236.022 395.489 236.147C435.94 236.396 467.776 262.989 475.141 302.815C483.631 348.384 447.675 394.202 401.232 395.451C370.645 396.325 340.058 395.701 309.47 395.701C306.099 395.701 303.727 396.574 301.23 399.071C290.993 409.558 280.756 420.046 270.144 430.283C263.652 436.65 254.538 437.649 246.797 433.529C239.307 429.409 235.311 421.419 236.56 412.68C237.184 408.31 239.182 404.689 242.303 401.693C243.926 400.07 245.923 398.822 247.671 397.324C247.671 396.699 247.297 396.2 246.922 395.576Z",
        fill: "currentColor"
      }, null, -1),
      l("path", {
        d: "M416.463 76.2184C449.548 76.3433 476.265 103.185 476.265 136.145C476.265 169.229 449.173 196.071 415.964 196.071C383.129 196.071 356.287 168.855 356.537 135.895C356.787 102.686 383.504 76.0936 416.463 76.2184Z",
        fill: "currentColor"
      }, null, -1),
      l("path", {
        d: "M156.658 375.85C156.533 409.309 129.691 435.901 96.3572 435.651C63.5226 435.527 36.5558 408.31 36.8055 375.475C37.0552 342.266 64.1469 315.674 97.4809 315.924C130.066 316.049 156.783 343.14 156.658 375.85Z",
        fill: "currentColor"
      }, null, -1)
    ]), 6));
  }
});
export {
  p as _
};
