import { defineComponent as i, computed as o, openBlock as s, createElementBlock as n, normalizeClass as r, normalizeStyle as a, createElementVNode as c } from "vue";
const u = /* @__PURE__ */ i({
  __name: "TIRocketFill",
  props: {
    size: {
      type: String,
      default: "is-default",
      validator(e) {
        return ["is-small", "is-medium", "is-large", "is-default", "is-12", "is-16", "is-14", "is-26", "is-28", "is-36"].indexOf(e) > -1;
      }
    },
    type: {
      type: String,
      default: void 0
    },
    title: {
      type: String,
      default: void 0
    },
    color: {
      type: String,
      default: void 0
    },
    clickable: {
      type: Boolean,
      default: !1
    }
  },
  setup(e) {
    const l = e, C = o(() => [
      "icon",
      l.size,
      {
        [l.type]: l.type && !l.color,
        "is-clickable": l.clickable
      }
    ]);
    return (d, t) => (s(), n("svg", {
      class: r(C.value),
      style: a(e.color ? `color: ${e.color} !important` : void 0),
      width: "512",
      height: "512",
      viewBox: "0 0 512 512",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, t[0] || (t[0] = [
      c("path", {
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        d: "M477.439 49.97C477.435 49.9998 477.435 50.0302 477.439 50.06C484.529 81 476.739 128.23 456.049 179.59C435.269 231.19 404.169 279.85 370.739 313.11C360.142 323.757 348.796 333.633 336.789 342.66C337.679 364.95 334.509 384.54 327.339 401C301.999 459.05 236.999 475.34 210.149 479.66C208.778 479.887 207.389 480.001 205.999 480C198.966 479.928 192.29 476.896 187.606 471.649C182.923 466.403 180.666 459.426 181.389 452.43V452.3L188.389 388.06L186.239 387.83C178.402 387.006 171.088 383.506 165.529 377.92L134.139 346.51C128.561 340.943 125.065 333.628 124.239 325.79C124.209 325.494 124.175 325.186 124.14 324.867L124.14 324.863L124.14 324.862L124.14 324.861C124.093 324.439 124.045 323.996 123.999 323.53L59.6792 330.55H59.5492C51.7924 331.34 44.1111 328.466 38.7782 322.778C33.4454 317.09 31.0715 309.24 32.3592 301.55C36.7492 274.85 53.2392 209.82 110.979 184.41C127.549 177.18 147.219 174 169.549 175C178.596 163.047 188.471 151.742 199.099 141.17C232.259 107.95 281.319 76.95 333.679 55.95C385.629 35.15 432.509 27.4 462.309 34.67C469.851 36.4793 475.714 42.4086 477.439 49.97ZM306.325 237.707C328.293 246.8 353.576 241.761 370.379 224.94C381.504 213.982 387.768 199.02 387.768 183.405C387.768 167.79 381.504 152.828 370.379 141.87C353.576 125.049 328.293 120.01 306.325 129.103C284.356 138.196 270.031 159.629 270.031 183.405C270.031 207.181 284.356 228.614 306.325 237.707ZM328.849 156.79C316.116 156.797 305.162 165.797 302.684 178.286C300.206 190.776 306.896 203.276 318.662 208.143C330.427 213.01 343.993 208.889 351.062 198.299C358.131 187.709 356.736 173.6 347.729 164.6C342.726 159.587 335.931 156.776 328.849 156.79ZM150.929 389.11C154.148 386.909 158.06 385.96 161.929 386.44C170.695 387.517 176.93 395.493 175.859 404.26C174.254 417.792 168.126 430.385 158.469 440C154.809 443.66 143.669 454.8 101.199 460.8C88.9954 462.496 76.7125 463.564 64.3992 464H63.9992C59.6837 464.001 55.5506 462.26 52.538 459.17C49.5253 456.08 47.8886 451.904 47.9992 447.59C48.4394 435.286 49.5142 423.013 51.2192 410.82C57.2058 368.394 68.3268 357.242 71.993 353.566L71.9992 353.56C81.6095 343.948 94.1442 337.805 107.629 336.1C113.869 335.333 119.98 338.292 123.248 343.662C126.517 349.033 126.337 355.82 122.789 361.01L110.639 382.01C102.849 395.57 118.529 410.53 131.639 402.01C138.119 397.8 144.539 393.48 150.929 389.11Z",
        fill: "currentColor"
      }, null, -1)
    ]), 6));
  }
});
export {
  u as _
};
